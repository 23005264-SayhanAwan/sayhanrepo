<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Your Shopping Cart</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    .StripeElement {
      box-sizing: border-box;
      height: 40px;
      padding: 10px 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: white;
    }
    .StripeElement--focus {
      border-color: #0d6efd;
      box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }
    .StripeElement--invalid {
      border-color: #dc3545;
    }
    .card-errors {
      color: #dc3545;
      font-size: 0.875rem;
      margin-top: 0.25rem;
    }
    #checkout-button:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    .payment-section {
      margin-top: 2rem;
    }
    .order-summary {
      background-color: #ffffff;
      border: 2px solid #dee2e6;
      border-radius: 8px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .order-summary h5 {
      color: #212529;
      margin-bottom: 1rem;
      font-weight: 600;
    }
    .summary-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.5rem 0;
      border-bottom: 1px solid #f1f3f4;
    }
    .summary-row:last-child {
      border-bottom: none;
      border-top: 2px solid #dee2e6;
      padding-top: 1rem;
      margin-top: 0.5rem;
      font-weight: 600;
      font-size: 1.1rem;
    }
    .summary-label {
      color: #495057;
      font-weight: 500;
    }
    .summary-value {
      color: #212529;
      font-weight: 600;
    }
    .discount-value {
      color: #28a745;
    }
    .cashback-value {
      color: #17a2b8;
    }
    .cashback-selection {
      background-color: #f8f9fa;
      border: 1px solid #dee2e6;
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    .cashback-item {
      border: 1px solid #dee2e6;
      border-radius: 4px;
      padding: 0.75rem;
      margin-bottom: 0.5rem;
      background-color: white;
      cursor: pointer;
      transition: all 0.2s;
    }
    .cashback-item:hover {
      background-color: #f8f9fa;
    }
    .cashback-item.selected {
      border-color: #0d6efd;
      background-color: #e7f3ff;
    }
    .cashback-item.expiring {
      border-color: #ffc107;
      background-color: #fff3cd;
    }
    .cashback-controls {
      margin-bottom: 1rem;
    }
    .cashback-controls .btn {
      margin-right: 0.5rem;
      margin-bottom: 0.5rem;
    }
    .section-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 0.75rem 1rem;
      border-radius: 8px 8px 0 0;
      margin-bottom: 0;
    }
    .restaurant-section-header {
      background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%);
    }
    .ticket-section-header {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    }
    .cart-section {
      border: 1px solid #dee2e6;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      overflow: hidden;
    }
  </style>
</head>
<body>
  <%- include('partials/Membernav', { member: member }) %>
  
  <div class="container mt-5">
    <h2>Your Shopping Cart</h2>
    
    <% if (cart.length === 0) { %>
      <div class="alert alert-info">
        <h4>Your cart is empty</h4>
        <p>Looks like you haven't added anything to your cart yet.</p>
        <div class="d-flex gap-2">
          <a href="/store-items" class="btn btn-primary">Shop Store Items</a>
          <a href="/restaurant" class="btn btn-success">Order Food</a>
          <a href="/events" class="btn btn-outline-primary">Browse Events</a>
        </div>
      </div>
    <% } else { %>
      <!-- Cart Items Form -->
      <form id="update-form" action="/store/update-cart-all" method="POST">
        
        <!-- Store Items Section -->
        <% const storeItems = cart.filter(item => item.type !== 'ticket' && item.type !== 'restaurant'); %>
        <% if (storeItems.length > 0) { %>
          <div class="cart-section">
            <div class="section-header">
              <h4 class="mb-0">Store Items</h4>
            </div>
            <div class="table-responsive">
              <table class="table table-striped mb-0">
                <thead class="table-light">
                  <tr>
                    <th>Item</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% storeItems.forEach((item, index) => { %>
                    <tr>
                      <td>
                        <div class="d-flex align-items-center">
                          <% if (item.storeitempic) { %>
                            <img src="/images/<%= item.storeitempic %>" alt="<%= item.name %>" 
                                 style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px; margin-right: 10px;">
                          <% } %>
                          <strong><%= item.name %></strong>
                        </div>
                      </td>
                      <td>$<%= item.price.toFixed(2) %></td>
                      <td>
                        <input
                          type="number"
                          name="quantities[<%= cart.indexOf(item) %>]"
                          value="<%= item.quantity %>"
                          min="1"
                          max="99"
                          class="form-control"
                          style="width:80px;">
                      </td>
                      <td>$<%= (item.price * item.quantity).toFixed(2) %></td>
                      <td>
                        <button 
                          type="button"
                          class="btn btn-sm btn-danger"
                          onclick="removeFromCart('item', <%= item.id %>)">
                          Remove
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        <% } %>

        <!-- Restaurant Items Section -->
        <% const restaurantItems = cart.filter(item => item.type === 'restaurant'); %>
        <% if (restaurantItems.length > 0) { %>
          <div class="cart-section">
            <div class="section-header restaurant-section-header">
              <h4 class="mb-0"> Restaurant Items</h4>
            </div>
            <div class="table-responsive">
              <table class="table table-striped mb-0">
                <thead class="table-light">
                  <tr>
                    <th>Item</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% restaurantItems.forEach((item, index) => { %>
                    <tr>
                      <td>
                        <div class="d-flex align-items-center">
                          <% if (item.image) { %>
                            <img src="<%= item.image %>" alt="<%= item.name %>" 
                                 style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px; margin-right: 10px;">
                          <% } %>
                          <div>
                            <strong><%= item.name %></strong>
                            <% if (item.description) { %>
                              <br><small class="text-muted"><%= item.description %></small>
                            <% } %>
                          </div>
                        </div>
                      </td>
                      <td>$<%= item.price.toFixed(2) %></td>
                      <td>
                        <input
                          type="number"
                          name="quantities[<%= cart.indexOf(item) %>]"
                          value="<%= item.quantity %>"
                          min="1"
                          max="99"
                          class="form-control"
                          style="width:80px;">
                      </td>
                      <td>$<%= (item.price * item.quantity).toFixed(2) %></td>
                      <td>
                        <button 
                          type="button"
                          class="btn btn-sm btn-danger"
                          onclick="removeFromCart('restaurant', <%= item.id %>)">
                          Remove
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        <% } %>
        
        <!-- Event Tickets Section -->
        <% const tickets = cart.filter(item => item.type === 'ticket'); %>
        <% if (tickets.length > 0) { %>
          <div class="cart-section">
            <div class="section-header ticket-section-header">
              <h4 class="mb-0"> Event Tickets</h4>
            </div>
            <div class="table-responsive">
              <table class="table table-striped mb-0">
                <thead class="table-light">
                  <tr>
                    <th>Event</th>
                    <th>Date & Location</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% tickets.forEach((ticket, index) => { %>
                    <tr>
                      <td>
                        <strong><%= ticket.name %></strong>
                        <br><small class="text-muted"> Digital Ticket</small>
                      </td>
                      <td>
                        <div>
                          <span class="badge bg-info mb-1">
                             <%= new Date(ticket.eventDate).toLocaleDateString() %>
                          </span>
                          <br>
                          <small class="text-muted"> <%= ticket.location %></small>
                        </div>
                      </td>
                      <td>$<%= ticket.price.toFixed(2) %></td>
                      <td>
                        <input
                          type="number"
                          name="quantities[<%= cart.indexOf(ticket) %>]"
                          value="<%= ticket.quantity %>"
                          min="1"
                          max="<%= ticket.maxQuantity || 5 %>"
                          class="form-control"
                          style="width:80px;">
                        <small class="text-muted">Max: <%= ticket.maxQuantity || 5 %></small>
                      </td>
                      <td>$<%= (ticket.price * ticket.quantity).toFixed(2) %></td>
                      <td>
                        <button 
                          type="button"
                          class="btn btn-sm btn-danger"
                          onclick="removeFromCart('ticket', <%= ticket.id %>)">
                          Remove
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        <% } %>
        
        <div class="row mb-3">
          <div class="col-md-6">
            <button type="submit" class="btn btn-primary"> Update Quantities</button>
          </div>
          <div class="col-md-6 text-end">
            <h4>Cart Total: $<%= totalAmount.toFixed(2) %></h4>
          </div>
        </div>
      </form>
      
      <!-- Enhanced Order Summary -->
      <div class="order-summary">
        <h5> Order Summary</h5>
        
        <% if (storeItemsTotal > 0) { %>
          <div class="summary-row">
            <span class="summary-label"> Store Items:</span>
            <span class="summary-value">$<%= storeItemsTotal.toFixed(2) %></span>
          </div>
        <% } %>
        
        <% if (restaurantItemsTotal > 0) { %>
          <div class="summary-row">
            <span class="summary-label"> Restaurant Items:</span>
            <span class="summary-value">$<%= restaurantItemsTotal.toFixed(2) %></span>
          </div>
        <% } %>
        
        <% if (ticketsTotal > 0) { %>
          <div class="summary-row">
            <span class="summary-label"> Event Tickets:</span>
            <span class="summary-value">$<%= ticketsTotal.toFixed(2) %></span>
          </div>
        <% } %>
        
        <div class="summary-row">
          <span class="summary-label">Subtotal:</span>
          <span class="summary-value">$<%= totalAmount.toFixed(2) %></span>
        </div>
        
        <% if (discountAmount > 0) { %>
          <div class="summary-row">
            <span class="summary-label"> Discount (<%= (discountRate * 100).toFixed(0) %>%):</span>
            <span class="summary-value discount-value">-$<%= discountAmount.toFixed(2) %></span>
          </div>
        <% } %>
        
        <div class="summary-row">
          <span class="summary-label">After Discount:</span>
          <span class="summary-value">$<%= subtotalAfterDiscount.toFixed(2) %></span>
        </div>
        
        <div class="summary-row">
          <span class="summary-label"> Cashback Applied:</span>
          <span class="summary-value cashback-value" id="cashback-applied">-$0.00</span>
        </div>
        
        <div class="summary-row">
          <span class="summary-label">Final Total:</span>
          <span class="summary-value" id="final-total">$<%= subtotalAfterDiscount.toFixed(2) %></span>
        </div>
        
        <% if (ticketsTotal > 0 || restaurantItemsTotal > 0) { %>
          <div class="mt-3">
            <small class="text-info">
               <strong>Note:</strong> Membership discounts and cashback apply to your entire order including store items, restaurant items, and tickets.
            </small>
          </div>
        <% } %>
      </div>
      
      <!-- Cashback Selection -->
      <% if (cashbackRecords && cashbackRecords.length > 0) { %>
        <div class="cashback-selection">
          <h5> Select Cashback to Use</h5>
          <p class="text-muted mb-3">You have $<%= totalAvailableCashback.toFixed(2) %> available cashback. Select which ones to use:</p>
          
          <div class="cashback-controls">
            <button type="button" class="btn btn-sm btn-outline-primary" onclick="selectAllCashback()">
              Use All Available
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="clearAllCashback()">
              Clear Selection
            </button>
            <button type="button" class="btn btn-sm btn-outline-warning" onclick="selectExpiringCashback()">
              Use Expiring Soon
            </button>
          </div>
          
          <div class="cashback-items">
            <% cashbackRecords.forEach((record, index) => { %>
              <div class="cashback-item <%= record.DaysLeft <= 30 ? 'expiring' : '' %>" 
                   data-cashback-id="<%= record.CashbackID %>"
                   data-amount="<%= record.Amount %>"
                   onclick="toggleCashback('<%= record.CashbackID %>')">
                <div class="row align-items-center">
                  <div class="col-md-1">
                    <input type="checkbox" 
                           class="form-check-input cashback-checkbox" 
                           id="cashback-<%= record.CashbackID %>"
                           value="<%= record.CashbackID %>"
                           data-amount="<%= record.Amount %>"
                           onclick="event.stopPropagation();">
                  </div>
                  <div class="col-md-2">
                    <strong class="text-primary">$<%= record.Amount.toFixed(2) %></strong>
                  </div>
                  <div class="col-md-3">
                    <small class="text-muted"><%= record.EarnedFrom %></small>
                  </div>
                  <div class="col-md-2">
                    <small class="text-muted">
                      Earned: <%= new Date(record.EarnedDate).toLocaleDateString() %>
                    </small>
                  </div>
                  <div class="col-md-2">
                    <small class="text-muted">
                      Expires: <%= new Date(record.Cashback_ExpiryDate).toLocaleDateString() %>
                    </small>
                  </div>
                  <div class="col-md-2">
                    <% if (record.DaysLeft <= 30) { %>
                      <span class="badge bg-warning text-dark"> <%= record.DaysLeft %> days</span>
                    <% } else { %>
                      <span class="badge bg-success"><%= record.DaysLeft %> days</span>
                    <% } %>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
          
          <div class="mt-3">
            <small class="text-muted">
               <strong>Tip:</strong> Items with yellow background expire within 30 days. Use them first to avoid losing cashback!
            </small>
          </div>
        </div>
      <% } %>
      
      <!-- Payment Section -->
      <div class="payment-section">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">Payment Information</h5>
          </div>
          <div class="card-body">
            <div class="form-group mb-3">
              <label for="card-element" class="form-label">Credit or Debit Card</label>
              <div id="card-element" class="form-control" style="height: auto; padding: 10px;">
                <!-- A Stripe Element will be inserted here. -->
              </div>
              <div id="card-errors" class="card-errors" role="alert"></div>
            </div>
            
            <button id="checkout-button" class="btn btn-success btn-lg w-100">
              <span id="button-text"> Complete Purchase</span>
              <span id="spinner" class="spinner-border spinner-border-sm d-none ms-2" role="status" aria-hidden="true"></span>
            </button>
          </div>
        </div>
      </div>
      
      <!-- Continue Shopping -->
      <div class="mt-3 d-flex gap-2">
        <a href="/store-items" class="btn btn-outline-primary"> Continue Shopping</a>
        <a href="/restaurant" class="btn btn-outline-success"> Order More Food</a>
        <a href="/events" class="btn btn-outline-success"> Browse Events</a>
      </div>
    <% } %>
  </div>
  
  <script src="https://js.stripe.com/v3/"></script>
  <script>
    // Initialize Stripe
    const stripe = Stripe('pk_test_51Rknd72E9KtrAGClOrRdeVrBRXkvErwcZFSV99pX1Z4ODnE0R8CWULLdQo5hR7eFr9ppkpE8IBpCqErZ4IL4HLrC00xt8mRHf6');
    const elements = stripe.elements();
    const card = elements.create('card', {
      hidePostalCode: true,
      style: {
        base: {
          fontSize: '16px',
          color: '#424770',
          fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
          fontSmoothing: 'antialiased',
          '::placeholder': {
            color: '#aab7c4',
          },
        },
        invalid: {
          color: '#9e2146',
          iconColor: '#fa755a'
        },
      },
    });
    
    card.mount('#card-element');
    
    // Handle real-time validation errors
    card.on('change', ({error}) => {
      const displayError = document.getElementById('card-errors');
      if (error) {
        displayError.textContent = error.message;
      } else {
        displayError.textContent = '';
      }
    });
    
    // Cashback selection functionality
    const subtotalAfterDiscount = <%= subtotalAfterDiscount %>;
    
    function updateOrderSummary() {
      const selectedCashback = getSelectedCashback();
      const totalCashbackUsed = selectedCashback.reduce((sum, item) => sum + parseFloat(item.amount), 0);
      const maxUsable = Math.min(totalCashbackUsed, subtotalAfterDiscount);
      const finalTotal = subtotalAfterDiscount - maxUsable;
      
      document.getElementById('cashback-applied').textContent = `-$${maxUsable.toFixed(2)}`;
      document.getElementById('final-total').textContent = `$${finalTotal.toFixed(2)}`;
    }
    
    function getSelectedCashback() {
      const checkboxes = document.querySelectorAll('.cashback-checkbox:checked');
      const selected = [];
      checkboxes.forEach(checkbox => {
        selected.push({
          id: checkbox.value,
          amount: checkbox.dataset.amount
        });
      });
      return selected;
    }
    
    function toggleCashback(cashbackId) {
      const checkbox = document.getElementById(`cashback-${cashbackId}`);
      const item = checkbox.closest('.cashback-item');
      
      checkbox.checked = !checkbox.checked;
      
      if (checkbox.checked) {
        item.classList.add('selected');
      } else {
        item.classList.remove('selected');
      }
      
      updateOrderSummary();
    }
    
    function selectAllCashback() {
      document.querySelectorAll('.cashback-checkbox').forEach(checkbox => {
        checkbox.checked = true;
        checkbox.closest('.cashback-item').classList.add('selected');
      });
      updateOrderSummary();
    }
    
    function clearAllCashback() {
      document.querySelectorAll('.cashback-checkbox').forEach(checkbox => {
        checkbox.checked = false;
        checkbox.closest('.cashback-item').classList.remove('selected');
      });
      updateOrderSummary();
    }
    
    function selectExpiringCashback() {
      document.querySelectorAll('.cashback-checkbox').forEach(checkbox => {
        const item = checkbox.closest('.cashback-item');
        if (item.classList.contains('expiring')) {
          checkbox.checked = true;
          item.classList.add('selected');
        }
      });
      updateOrderSummary();
    }
    
    // Handle cashback selection changes
    document.querySelectorAll('.cashback-checkbox').forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        const item = this.closest('.cashback-item');
        if (this.checked) {
          item.classList.add('selected');
        } else {
          item.classList.remove('selected');
        }
        updateOrderSummary();
      });
    });
    
    // Handle checkout
    document.getElementById('checkout-button').addEventListener('click', async (event) => {
      event.preventDefault();
      
      const selectedCashback = getSelectedCashback();
      const button = document.getElementById('checkout-button');
      const buttonText = document.getElementById('button-text');
      const spinner = document.getElementById('spinner');
      
      button.disabled = true;
      buttonText.textContent = 'Processing Payment...';
      spinner.classList.remove('d-none');
      
      try {
        // Create payment intent with selected cashback
        const response = await fetch('/store/checkout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            selectedCashback: selectedCashback
          })
        });
        
        const data = await response.json();
        
        if (!response.ok) {
          throw new Error(data.error || 'Failed to create payment intent');
        }
        
        // Confirm payment
        const {error, paymentIntent} = await stripe.confirmCardPayment(data.clientSecret, {
          payment_method: {
            card: card,
          }
        });
        
        if (error) {
          throw new Error(error.message);
        }
        
        if (paymentIntent.status === 'succeeded') {
          // Confirm the order
          const confirmResponse = await fetch('/store/checkout/confirm', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          });
          
          const confirmData = await confirmResponse.json();
          
          if (!confirmResponse.ok) {
            throw new Error(confirmData.error || 'Failed to save order');
          }
          
          alert(' Payment successful! Your order has been placed.');
          window.location.href = '/store-items';
        } else {
          throw new Error('Payment did not succeed. Status: ' + paymentIntent.status);
        }
        
      } catch (error) {
        console.error('Payment error:', error);
        
        const errorDiv = document.getElementById('card-errors');
        errorDiv.textContent = error.message || 'An unexpected error occurred. Please try again.';
        
        button.disabled = false;
        buttonText.textContent = ' Complete Purchase';
        spinner.classList.add('d-none');
      }
    });
    
    // Updated remove from cart function to handle restaurant items
    function removeFromCart(type, itemId) {
      if (confirm('Are you sure you want to remove this item from your cart?')) {
        let url;
        if (type === 'restaurant') {
          url = `/restaurant/remove-from-cart/${itemId}`;
        } else if (type === 'ticket') {
          url = `/store/remove-from-cart/ticket/${itemId}`;
        } else {
          url = `/store/remove-from-cart/item/${itemId}`;
        }
        
        fetch(url, {
          method: 'POST'
        })
        .then(response => {
          if (response.ok) {
            window.location.reload();
          } else {
            alert('Failed to remove item from cart. Please try again.');
          }
        })
        .catch(error => {
          console.error('Error removing item:', error);
          alert('Error removing item from cart. Please try again.');
        });
      }
    }
  </script>
</body>
</html>