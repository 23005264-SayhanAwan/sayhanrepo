<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Manage Membership</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
  <style>
    body {
      background-color: #0c0f18;
      color: white;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .container {
      margin-top: 50px;
      max-width: 700px;
    }
    .membership-tier {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      border: 1px solid white;
      margin-bottom: 15px;
      background-color: #1a1d29;
      border-radius: 8px;
    }
    .selected {
      background-color: #28a745 !important;
      color: white !important;
      border: none;
    }
    .current-tier {
      background-color: #17a2b8 !important;
      color: white !important;
      border: none;
    }
    .disabled-tier {
      background-color: #2c2c2c !important;
      opacity: 0.5;
    }
    .select-btn {
      border-radius: 6px;
      padding: 8px 20px;
      background-color: #f49b00;
      color: white;
      border: none;
      font-weight: 500;
    }
    .select-btn:hover:not(:disabled) {
      background-color: #d88700;
    }
    .select-btn:disabled {
      background-color: #666;
      cursor: not-allowed;
      opacity: 0.6;
    }
    .checkout-btn {
      display: block;
      margin: 30px auto;
      padding: 12px 30px;
      font-size: 16px;
      background-color: #f49b00;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      color: white;
      font-weight: 500;
    }
    .checkout-btn:hover:not(:disabled) {
      background-color: #d88700;
    }
    .checkout-btn:disabled {
      background-color: #666;
      cursor: not-allowed;
      opacity: 0.6;
    }
    .current-tier-indicator {
      font-size: 12px;
      color: #17a2b8;
      font-weight: bold;
    }
    .tier-description {
      color: #b8c6db !important;
      font-size: 13px;
      line-height: 1.4;
      margin-top: 4px;
      font-weight: 400;
    }
    .upgrade-info {
      background-color: #1f2937;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
      border-left: 4px solid #f49b00;
    }
    .restriction-text {
      color: #dc3545;
      font-size: 11px;
      font-style: italic;
      margin-top: 2px;
    }
    .upgrade-price {
      color: #28a745;
      font-weight: bold;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <%- include('partials/Membernav.ejs') %>

  <div class="container">
    <h2 class="text-center">Manage Membership</h2>
    <p class="text-center"><strong>Current Tier:</strong> <span id="current-tier-display"><%= currentTier %></span></p>

    <!-- Upgrade Information -->
    <div class="upgrade-info">
      <h5>Upgrade Rules:</h5>
      <ul class="mb-0"><!--removes bottom space after unordered list-->
        <% if (currentTier === 'Bronze') { %>
          <li>You can upgrade to <strong>Silver</strong> ($24.99) or <strong>Gold</strong> ($39.99)</li>
        <% } else if (currentTier === 'Silver') { %>
          <li>You can upgrade to <strong>Gold</strong> for just <span class="upgrade-price">$15.00</span> (discounted!)</li>
          <li class="text-muted">No downgrades available - keep your Silver benefits!</li>
        <% } else if (currentTier === 'Gold') { %>
          <li class="text-success">You have the highest tier! No upgrades needed.</li>
          <li class="text-muted">No downgrades available - enjoy your premium benefits!</li>
        <% } %>
      </ul>
    </div>

    <% 
      const tiers = [
        { 
          name: 'Gold', 
          fullPrice: '$39.99',
          upgradePrice: currentTier === 'Silver' ? '$15.00' : '$39.99',
          description: currentTier === 'Silver' ? 
            '$15.00 upgrade fee.' :
            '$39.99 one-time.'
        },
        { 
          name: 'Silver', 
          fullPrice: '$24.99',
          upgradePrice: '$24.99',
          description: '$24.99 one-time' 
        },
        { 
          name: 'Bronze', 
          fullPrice: 'Free',
          upgradePrice: 'Free',
          description: 'Free Base tier.' 
        }
      ]; 
    %>
    
    <% tiers.forEach(tier => { %>
      <% 
        const isCurrent = tier.name === currentTier;
        const isDisabled = (currentTier === 'Gold') || 
                          (currentTier === 'Silver' && tier.name === 'Bronze') ||
                          (tier.name === 'Bronze' && currentTier !== 'Bronze');
        const canUpgrade = !isCurrent && !isDisabled;
      %>
      
      <div class="membership-tier <%= isDisabled ? 'disabled-tier' : '' %>">
        <div style="flex: 1;">
          <div class="d-flex align-items-center">
            <span style="font-size: 18px; font-weight: 600;"><%= tier.name %></span>
            <% if (tier.name === 'Gold' && currentTier === 'Silver') { %>
              <span class="badge bg-success ms-2">DISCOUNTED!</span>
            <% } %>
          </div>
          
          <small class="tier-description d-block"><%= tier.description %></small>
          
          <% if (isCurrent) { %>
            <small class="current-tier-indicator">Your Current Tier</small>
          <% } else if (isDisabled) { %>
            <% if (currentTier === 'Gold') { %>
              <small class="restriction-text">You already have the highest tier!</small>
            <% } else if (currentTier === 'Silver' && tier.name === 'Bronze') { %>
              <small class="restriction-text">No downgrades available</small>
            <% } else if (tier.name === 'Bronze') { %>
              <small class="restriction-text">Cannot downgrade to Bronze</small>
            <% } %>
          <% } %>
        </div>
        
        <button 
          type="button" 
          class="select-btn <%= isCurrent ? 'current-tier' : '' %>" 
          data-tier="<%= tier.name %>" 
          data-is-current="<%= isCurrent ? 'true' : 'false' %>"
          <%= isDisabled ? 'disabled' : '' %>>
          <% if (isCurrent) { %>
            Current
          <% } else if (isDisabled) { %>
            Unavailable
          <% } else { %>
            Select
          <% } %>
        </button>
      </div>
    <% }) %>

    <button id="checkout-button" class="checkout-btn" disabled>Select a Tier to Upgrade</button>
  </div>

  <script>
    const buttons = document.querySelectorAll('.select-btn:not([disabled])'); //selects all upgrade btn with class .select-btn and nt disabled
    const checkoutBtn = document.getElementById('checkout-button');//gets's "select tier to upgrade button" user mst choose user valid tier. starts out disabled cus dw ppl clickling it bfr selecting
    const currentTier = '<%= currentTier %>';//injects current tier into js string
    let selectedTier = null;//cus haven click anyt yet

    console.log('Current tier:', currentTier);

    // Update checkout button text and state based on selected tier
    function updateCheckoutButton(tier) {
      if (!tier || tier === currentTier) {
        checkoutBtn.textContent = tier === currentTier ? 'Already Your Current Tier' : 'Select a Tier to Upgrade';
        checkoutBtn.disabled = true;
        checkoutBtn.classList.add('disabled');
      } else {
        // Calculate price based on upgrade path
        let price = '';
        if (tier === 'Gold') {
          price = currentTier === 'Silver' ? '$15.00' : '$39.99';
        } else if (tier === 'Silver') {
          price = '$24.99';
        }
        
        checkoutBtn.textContent = `Upgrade to ${tier} - Pay ${price}`;
        checkoutBtn.disabled = false; //button becomes active
        checkoutBtn.classList.remove('disabled');
      }
    }

    // Initialize the checkout button state
    updateCheckoutButton(currentTier);

    buttons.forEach(button => { //adding click event for each u[grade button and when clicked it runs]
      button.addEventListener('click', function () {
        const tier = this.dataset.tier;
        const isCurrent = this.dataset.isCurrent === 'true';

        console.log('Clicked tier:', tier, 'Is current:', isCurrent);

        // If clicking current tier, don't allow selection
        if (isCurrent) {
          console.log('Cannot select current tier');
          return;
        }

        // Store selection on server send post request to mem/mang/sel
        fetch('/member/managemembership/select', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ tier })
        })
        .then(res => {
          if (!res.ok) {
            return res.json().then(data => {
              throw new Error(data.error || 'Failed to select tier');
            });
          }
          return res.json();
        })
        .then(data => {
          // Update UI state
          selectedTier = tier; //saves teir locally so other parts of the app can use the tier
          
          // Reset all buttons to default state
          buttons.forEach(btn => {
            const btnTier = btn.dataset.tier;
            const btnIsCurrent = btn.dataset.isCurrent === 'true';
            
            // Remove selected class from all
            btn.classList.remove('selected');
            
            if (btnIsCurrent) {
              // Keep current tier button as "Current"
              btn.textContent = 'Current';
              btn.classList.add('current-tier');
            } else if (btnTier === tier) {
              // Mark selected tier
              btn.classList.add('selected');
              btn.textContent = 'Selected';
            } else {
              // Other tiers show "Select"
              btn.textContent = 'Select';
              btn.classList.remove('current-tier');
            }
          });

          // Update checkout button
          updateCheckoutButton(tier);
        })
        .catch(err => {
          console.error('Failed to select tier:', err);
          alert('Error: ' + err.message);
        });
      });
    });

    // Handle checkout (payment)
    checkoutBtn.addEventListener('click', function() {
      if (this.disabled) return;
      
      console.log("Checkout clicked for tier:", selectedTier);
      
      // Prevent clicking current tier
      if (selectedTier === currentTier) {
        console.log('Cannot checkout for current tier');
        return;
      }
      
      checkoutBtn.disabled = true;
      checkoutBtn.textContent = 'Processing...';

      fetch('/member/managemembership/create-checkout-session', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      })
      .then(res => res.json())
      .then(data => {
        if (data.error) {
          throw new Error(data.error);
        }
        
        if (data.url) {
          // Go to Stripe
          window.location.href = data.url;
        } else {
          throw new Error('No checkout URL received');
        }
      })
      .catch(error => {
        console.error("Checkout failed:", error);
        alert('Processing failed: ' + error.message);
        checkoutBtn.disabled = false;
        updateCheckoutButton(selectedTier);
      });
    });
  </script>

</body>
</html>